// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

enum Role {
  Admin
  User
}

enum Category {
  Realistic
  Investigative
  Artistic
  Social
  Enterprising
  Conventional
}

model User {
  id               String            @id @default(uuid())
  full_name        String
  email            String            @unique
  password         String
  date_of_birth    DateTime
  gender           Gender
  role             Role
  created_at       DateTime          @default(now())
  updated_at       DateTime          @updatedAt
  deleted_at       DateTime?
  questions_answer QuestionsAnswer[]
  session          Session[]

  @@map("users")
}

model Authentication {
  token String @id

  @@map("authentications")
}

model Question {
  id               String            @id @default(uuid())
  question         String
  category         Category
  questions_answer QuestionsAnswer[]

  @@map("questions")
}

model QuestionsAnswer {
  id                   String   @id @default(uuid())
  question_id_relation Question @relation(fields: [question_id], references: [id])
  question_id          String
  owner_relation       User     @relation(fields: [owner], references: [id])
  owner                String
  score                String
  session_id_relation  Session  @relation(fields: [session_id], references: [id])
  session_id           String
  category_name        String

  @@map("questions_answers")
}

model Session {
  id              String            @id @default(uuid())
  quiz_result_id  String?
  owner_relation  User              @relation(fields: [owner], references: [id])
  owner           String
  question_answer QuestionsAnswer[]

  @@map("sessions")
}
